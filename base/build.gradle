apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'kotlin-kapt'
//apply plugin: 'com.novoda.bintray-release'
apply from: 'config.gradle'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode versionCode
        versionName versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
    //noinspection GroovyMissingReturnStatement
    lintOptions {
        disable 'InvalidPackage'
        abortOnError true
        textReport true
        textOutput "stdout"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        kotlinOptions.freeCompilerArgs += ['-module-name', "hope.base"]
    }
    viewBinding {
        enabled = true
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api "androidx.core:core:1.3.0"
    api "androidx.core:core-ktx:1.3.0"
    api "androidx.core:core-animation:1.0.0-alpha01"
//    api "androidx.legacy:legacy-support-core-ui:1.0.0"
//    api "androidx.legacy:legacy-support-core-utils:1.0.0"
//    api "androidx.fragment:fragment:$androidx_version"
    api "androidx.annotation:annotation:1.1.0"
    api "androidx.appcompat:appcompat:1.3.0-alpha01"
    api "com.google.android.material:material:1.2.0-beta01"
//    api "androidx:cardview-v7:${versions.supportLibrary}"
//    api "androidx:gridlayout-v7:${versions.supportLibrary}"
    api "androidx.recyclerview:recyclerview:1.2.0-alpha03"
    api "androidx.vectordrawable:vectordrawable:1.1.0"
    api "androidx.vectordrawable:vectordrawable-animated:1.1.0"
//    api "androidx:design:${versions.supportLibrary}"
//    api "androidx.exifinterface.media.ExifInterface"
    api 'com.squareup.okhttp3:okhttp:4.7.2'
    api 'com.squareup.okhttp3:mockwebserver:4.7.2'
    api 'com.squareup.okhttp3:logging-interceptor:4.7.2'
//    api 'com.squareup.okio:okio:2.4.1'
    api('com.facebook.fresco:fresco:2.2.0') {
        exclude group: 'com.facebook.soloader', module: 'soloader'
        exclude group: 'com.facebook.fresco', module: 'soloader'
        exclude group: 'com.facebook.fresco', module: 'nativeimagefilters'
        exclude group: 'com.facebook.fresco', module: 'nativeimagetranscoder'
        exclude group: 'com.facebook.fresco', module: 'memory-type-native'
        exclude group: 'com.facebook.fresco', module: 'imagepipeline-native'
    }
//    api 'com.facebook.fresco:animated-webp:2.2.0'
//    api 'com.facebook.fresco:webpsupport:2.2.0'
    api ('com.squareup.retrofit2:retrofit:2.9.0', {
        exclude group: 'com.squareup.okhttp3:okhttp'
    })
    api 'com.squareup.retrofit2:converter-gson:2.9.0'
    api "androidx.constraintlayout:constraintlayout:1.1.3"
    api "androidx.constraintlayout:constraintlayout-solver:1.1.3"
    api "androidx.lifecycle:lifecycle-runtime:2.2.0"
    api "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    api "androidx.lifecycle:lifecycle-common:2.2.0"
    api "androidx.lifecycle:lifecycle-extensions:2.2.0"
    api "androidx.collection:collection-ktx:1.1.0"
    def refresh_version = '2.0.0'
    api "com.scwang.smart:refresh-layout-kernel:$refresh_version"
    api "com.scwang.smart:refresh-header-material:$refresh_version"    //谷歌刷新头
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.7'
    testImplementation 'junit:junit:4.13'
    testImplementation 'androidx.test.ext:junit:1.1.1'
    testImplementation 'org.mockito:mockito-core:3.1.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.7.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "androidx.annotation:annotation:1.1.0"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    // Set this dependency to use JUnit 4 rules
    androidTestImplementation 'androidx.test:rules:1.2.0'
    // Set this dependency to build and run Espresso tests
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier = 'sources'
}

artifacts {
    archives sourcesJar
}

tasks.withType(Javadoc).all {
    enabled = false
}

//publish {
//    userOrg = 'forhope33786'
//    groupId = 'for.hope'
//    artifactId = 'android-base'
//    publishVersion = versionName
//    desc = 'super android base'
//    bintrayUser = System.getenv("bintray_user")
//    bintrayKey = System.getenv("bintray_key")
//
//    dryRun = false
//}

publishing {
    publications {
        bar(MavenPublication) {
            groupId 'for.hope' // Replace with group ID
            artifactId 'android-base'
            version versionName
            artifact("$buildDir/outputs/aar/base-release.aar")
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            /** Configure path of your package repository on Github
             ** Replace GITHUB_USERID with your/organisation Github userID
             ** and REPOSITORY with the repository name on GitHub
             */
            url = uri("https://maven.pkg.github.com/GITHUB_USERID/REPOSITORY")
            credentials {
                /** Create github.properties in root project folder file with
                 ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                 ** Set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/

                username = System.getenv("GPR_USER")
                password = System.getenv("GPR_API_KEY")
            }
        }
    }
}